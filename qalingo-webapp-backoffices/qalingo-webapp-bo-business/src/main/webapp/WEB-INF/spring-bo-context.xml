<?xml version="1.0" encoding="UTF-8"?>
<!--

    Most of the code in the Qalingo project is copyrighted Hoteia and licensed
    under the Apache License Version 2.0 (release version 0.7.0)
            http://www.apache.org/licenses/LICENSE-2.0

                      Copyright (c) Hoteia, 2012-2013
    http://www.hoteia.com - http://twitter.com/hoteia - contact@hoteia.com


-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"	
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx.xsd
					   	   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="fr.hoteia.qalingo.web.handler.security" />

	<!-- Turn on @Autowired, @PostConstruct etc support -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
		
	<import resource="classpath:resources-config.xml" />
	<import resource="classpath:messages-config.xml" />
	
	<import resource="wurfl-default-ctx.xml" />

	<!-- Configures core context -->
	<import resource="classpath:conf/spring/qalingo-core-local-ds.xml" />
	<import resource="classpath:conf/spring/qalingo-core-context.xml" />
	<import resource="classpath:conf/spring/qalingo-core-solr.xml" />
	<import resource="classpath:conf/spring/qalingo-core-rule-engine.xml" />
	<import resource="classpath:conf/spring/qalingo-core-bo-cache.xml" />
	<import resource="classpath:conf/spring/qalingo-core-jax-rs.xml" />
	
	<!-- Configures view context -->
	<import resource="classpath:conf/spring/qalingo-core-bo-view.xml" />

	<!-- Dozer Backoffice specific part - override common -->
    <bean id="org.dozer.Mapper" class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles" value="classpath:conf/dozer/dozer-mapping-*.xml" />
        <property name="factories">
            <map>
                <entry key="fr.hoteia.qalingo.core.dozer.CatalogCategoryCustomBeanFactory">
                    <ref bean="catalogCategoryCustomBeanFactory" />
                </entry>
                <entry key="fr.hoteia.qalingo.core.dozer.ProductMarketingCustomBeanFactory">
                    <ref bean="productMarketingCustomBeanFactory" />
                </entry>
                <entry key="fr.hoteia.qalingo.core.dozer.ProductSkuCustomBeanFactory">
                    <ref bean="productSkuCustomBeanFactory" />
                </entry>
            </map>
        </property>
        <property name="eventListeners">
            <list>
                <ref bean="eventCatalogCategoryListener" />
            </list>
        </property>
    </bean>
    
    <bean id="catalogCategoryCustomBeanFactory" class="fr.hoteia.qalingo.core.dozer.CatalogCategoryCustomBeanFactory" />

    <bean id="productMarketingCustomBeanFactory" class="fr.hoteia.qalingo.core.dozer.ProductMarketingCustomBeanFactory" />

    <bean id="productSkuCustomBeanFactory" class="fr.hoteia.qalingo.core.dozer.ProductSkuCustomBeanFactory" />

    <bean id="eventCatalogCategoryListener" class="fr.hoteia.qalingo.core.dozer.BackofficePojoEventListener">
        <property name="backofficeUrlService" ref="backofficeUrlService" />
    </bean>

    <!-- Override -->
	<import resource="classpath:conf/spring/ext-core-business.xml" />
	
</beans>